#!/bin/bash

set -e
if [[ ! -f ./releaser ]];then
  wget http://http.archive.ai-traders.com/releaser/0.3.2/releaser
fi
source ./releaser
# Docker-ops are not used here, because it is a public ide docker image and
# we let it build on docker hub. If there was 1 such image in docker hub and one
# in our private docker-registry, they could differ. Thus
# test this without pushing to our private docker-registry.
releaser_init

function verify_version_not_released {
  source ./image/etc_ide.d/variables/60-variables.sh
  if [[ $(git tag | grep "${this_image_tag}" -c) -ne 0 ]]; then
    echo "git tag: ${this_image_tag} exists already, please bump version in "\
    "./image/etc_ide.d/variables/60-variables.sh"
    exit 1
  fi
  changelog_version=$(get_last_version_from_changelog)
  if [[ $(git tag | grep "${changelog_version}" -c) -ne 0 ]]; then
    echo "git tag: ${changelog_version} exists already, please bump version in "\
    "changelog file"
    exit 1
  fi
}

command="$1"
case "${command}" in
  bump)
    new_version="$2"
    if [[ -z "${new_version}" ]];then
      source ./image/etc_ide.d/variables/60-variables.sh
      old_version="${this_image_tag}"
      new_version="$(bump_patch_version ${old_version})"
    fi
    locally_bump_version_in_versionfile "export this_image_tag=" "${version_file}" "${new_version}"
    locally_bump_version_in_changelog "${changelog_file}" "${new_version}"
    exit $?
    ;;
  verify_version)
      verify_version_not_released
      exit $?
      ;;
  build)
      # This is a public docker image, we cannot have complicated
      # build script or use --build-arg.
      source ./image/etc_ide.d/variables/60-variables.sh
      cd image
      docker build -t ${this_image_name}:${this_image_tag} --rm .
      exit $?
      ;;
  itest)
      source ./image/etc_ide.d/variables/60-variables.sh
      echo "IDE_DOCKER_IMAGE=${this_image_name}:${this_image_tag}" > Idefile.to_be_tested
      echo "IDE_IDENTITY=$(pwd)/test/integration/ide_identities/full" >> Idefile.to_be_tested
      echo "IDE_WORK=$(pwd)/test/integration/ide_work" >> Idefile.to_be_tested
      echo "IDE_DOCKER_OPTIONS=\"--privileged\"" >> Idefile.to_be_tested
      time bats "$(pwd)/test/integration/bats"
      exit $?
      ;;
  release)
      verify_version_not_released
      git tag "${this_image_tag}"
      # push git tag
      git push origin "${this_image_tag}"
      exit $?
      ;;
  *)
      echo "Invalid command: '${command}'"
      exit 1
      ;;
esac
set +e
